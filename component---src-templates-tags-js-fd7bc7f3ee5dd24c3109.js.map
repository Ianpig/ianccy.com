{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/components/banner.js","webpack:///./src/templates/tags.js","webpack:///./node_modules/react-intersection-observer/react-intersection-observer.m.js","webpack:///./src/components/SideBar.js"],"names":["props","className","postClass","node","frontmatter","thumbnail","to","fields","slug","split","title","description","date","timeToRead","categories","fluid","childImageSharp","alt","Banner","imgFluid","Tags","pageContext","data","location","useState","page","setPage","loading","setLoading","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","social","author","facebook","postCounter","tag","useInView","threshold","inView","ref","entry","useEffect","length","setTimeout","prevPage","file","map","index","key","count","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","ObserverMap","Map","RootIds","rootId","optionsToId","options","keys","sort","filter","undefined","root","has","set","toString","get","observe","element","callback","_createObserver","id","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","_elements$get","isIntersecting","some","intersectionRatio","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","unobserve","size","disconnect","isPlainChildren","children","InView","_React$Component","subClass","superClass","_this","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","constructor","__proto__","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","_this$props2","as","excluded","sourceKeys","_objectWithoutPropertiesLoose","_temp","_ref","_React$useState","setRef","current","result","displayName","defaultProps","SideBar","useStaticQuery","fixed","tagsGroup","categoriesGroup","refs","inViews","href","targer","group","fieldValue","replace"],"mappings":"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","file":"component---src-templates-tags-js-fd7bc7f3ee5dd24c3109.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\n\nexport default props => {\n    return (\n        <article\n            className={`post-card post-card-large ${props.postClass} ${\n                props.node.frontmatter.thumbnail ? `with-image` : `no-image`\n            }`}\n        >\n            <div className=\"post-card-link\">\n                <div className=\"post-card-content-container\">\n                    <div className=\"post-card-content\">\n                        <Link to={`/${props.node.fields.slug.split('-')[2]}`} className=\"post-link\">\n                            <h2 className=\"post-card-title\">\n                                {props.node.frontmatter.title || props.node.fields.slug}\n                            </h2>\n                        </Link>\n                    </div>\n                    <div>\n                        <Link to={`/${props.node.fields.slug.split('-')[2]}`} className=\"post-link\">\n                            <p className=\"post-card-description\">\n                                {props.node.frontmatter.description}\n                            </p>\n                        </Link>\n                    </div>\n                    <div className=\"post-card-tag-container\">\n                        <p className=\"post-card-date\">{props.node.frontmatter.date}</p>\n                        <span className=\"dot\">·</span>\n                        <p className=\"post-card-read\">{props.node.timeToRead}min</p>\n                        <span className=\"dot\">·</span>\n                        <Link\n                            className=\"post-card-cate-link\"\n                            to={`/categories/${props.node.frontmatter.categories}`}\n                        >\n                            <p className=\"post-card-cate\">{props.node.frontmatter.categories}</p>\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"post-image-container\">\n                    {props.node.frontmatter.thumbnail && (\n                        <Img\n                            className=\"post-bg-image\"\n                            fluid={props.node.frontmatter.thumbnail.childImageSharp.fluid}\n                            alt={props.node.frontmatter.title}\n                        />\n                        // <div\n                        //     className=\"post-bg-image\"\n                        //     style={{\n                        //         backgroundImage: `url(${props.node.frontmatter.thumbnail.childImageSharp.fluid.src})`\n                        //     }}\n                        // ></div>\n                    )}\n                </div>\n            </div>\n        </article>\n    );\n};\n","import React from 'react';\nimport Img from 'gatsby-image';\n\nfunction Banner({ imgFluid }) {\n    return (\n        <header className=\"page-head\">\n            <div className=\"banner-text\">\n                <h2 className=\"page-head-title\">\n                    Hi, I am Ian.\n                    <br />\n                    Keep Curiosity Alive\n                </h2>\n            </div>\n            <div className=\"img-container\">\n                <Img className=\"index-img\" fluid={imgFluid} alt=\"A corgi smiling happily\" />\n            </div>\n        </header>\n    );\n}\n\nexport default Banner;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { useInView } from 'react-intersection-observer';\n\nimport Banner from '../components/banner';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport PostCard from '../components/postCard';\nimport SideBar from '../components/SideBar';\nimport '../utils/css/index.scss';\nimport '../utils/css/global.scss';\n\nconst Tags = ({ pageContext, data, location }) => {\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    const { social, author } = data.site.siteMetadata;\n    const facebook = data.site.siteMetadata.social.facebook;\n    let postCounter = 0;\n    const { tag } = pageContext;\n    const { ref, inView, entry } = useInView({\n        /* Optional options */\n        threshold: 0\n    });\n    useEffect(() => {\n        if (!loading && inView && posts.length > page * 10) {\n            setLoading(true);\n            setTimeout(() => {\n                setPage(prevPage => prevPage + 1);\n                setLoading(false);\n                // API or Your Functions to get data\n            }, 500);\n        }\n    }, [inView]);\n    return (\n        <Layout\n            location={location}\n            title={siteTitle}\n            facebook={facebook}\n            social={social}\n            author={author}\n        >\n            <SEO title={tag} />\n            {/* <Bio /> */}\n            <Banner imgFluid={data.file.childImageSharp.fluid} />\n            <div className=\"post-tags\">Tag : {tag}</div>\n            <div className=\"index-container\">\n                <SideBar />\n                <div className=\"post-feed\">\n                    {posts.map(({ node }, index) => {\n                        postCounter++;\n                        // if (index > page * 10) {\n                        //     return null;\n                        // }\n                        return (\n                            <PostCard\n                                key={node.fields.slug}\n                                count={postCounter}\n                                node={node}\n                                postClass={`post`}\n                            />\n                        );\n                    })}\n                    {/* {loading && (\n                        <div className=\"loading-container\">\n                            <div className=\"loader\"></div>\n                        </div>\n                    )} */}\n                </div>\n            </div>\n            {/* <div ref={ref}></div> */}\n        </Layout>\n    );\n};\n\nTags.propTypes = {\n    location: PropTypes.object,\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired\n                        }),\n                        fields: PropTypes.shape({\n                            slug: PropTypes.string.isRequired\n                        })\n                    })\n                }).isRequired\n            )\n        })\n    })\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n        site {\n            siteMetadata {\n                title\n                author\n                social {\n                    facebook\n                }\n            }\n        }\n        file(relativePath: { eq: \"banner.png\" }) {\n            id\n            childImageSharp {\n                fluid(maxWidth: 295) {\n                    ...GatsbyImageSharpFluid_noBase64\n                }\n            }\n        }\n        allMarkdownRemark(\n            limit: 2000\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { tags: { in: [$tag] } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        description\n                        tags\n                        thumbnail {\n                            childImageSharp {\n                                fluid(maxWidth: 450) {\n                                    ...GatsbyImageSharpFluid\n                                }\n                            }\n                        }\n                    }\n                    timeToRead\n                }\n            }\n        }\n        imageSharp(fluid: { src: { regex: \"/ogImage.jpg/\" } }) {\n            fluid {\n                src\n            }\n        }\n    }\n`;\n","import { createElement, Component, useRef, useState, useCallback, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ObserverMap = new Map();\nvar RootIds = new Map();\nvar rootId = 0;\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get; // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n\n\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!element) return function () {}; // An observer with the same options can be reused, so lets use this fact\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap[\"delete\"](id);\n    }\n  };\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n * Monitors scroll, and triggers the children function with updated props\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    });\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\"]);\n\n    return /*#__PURE__*/createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView;\n\n  var unobserve = useRef();\n\n  var _React$useState = useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      });\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport default InView;\nexport { InView, useInView };","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { useInView } from 'react-intersection-observer';\n\nimport Img from 'gatsby-image';\n\nfunction SideBar() {\n    const {\n        file: {\n            childImageSharp: { fixed }\n        },\n        tagsGroup,\n        categoriesGroup\n    } = useStaticQuery(\n        graphql`\n            query {\n                tagsGroup: allMarkdownRemark(limit: 2000) {\n                    group(field: frontmatter___tags) {\n                        fieldValue\n                    }\n                }\n                categoriesGroup: allMarkdownRemark(limit: 2000) {\n                    group(field: frontmatter___categories) {\n                        fieldValue\n                    }\n                }\n                file(relativePath: { eq: \"hippostick.png\" }) {\n                    id\n                    childImageSharp {\n                        fixed(width: 150, height: 150) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `\n    );\n    const { ref, inView } = useInView({\n        /* Optional options */\n        threshold: 0.1\n    });\n    const { ref: refs, inView: inViews } = useInView({\n        /* Optional options */\n        threshold: 0.1\n    });\n    return (\n        <div className=\"mobile-hidden\">\n            <div className={!inView && inViews ? `fixed-spcae` : ''} ref={ref}></div>\n            <div ref={refs} className={`side-bar ${!inView && inViews ? `fixed-side` : ''}`}>\n                <div className=\"line-side\">\n                    <p className=\"header\">贊助創作</p>\n                    <div>\n                        <a\n                            target=\"_blank\"\n                            href=\"https://store.line.me/stickershop/author/1019955/zh-Hant\"\n                            targer=\"_blank\"\n                            alt=\"小河馬與牠的快樂夥伴\"\n                        >\n                            <Img className=\"index-img\" fixed={fixed} alt=\"hippo line stick\" />\n                            <p>Line 貼圖</p>\n                        </a>\n                    </div>\n                </div>\n                <div className=\"categories-side\">\n                    <p className=\"header\">Category</p>\n                    <div>\n                        {categoriesGroup.group.map(({ fieldValue }) => (\n                            <Link key={fieldValue} to={`/categories/${fieldValue}`}>\n                                {fieldValue}\n                            </Link>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"tags-side\">\n                    <p className=\"header\">Tag</p>\n                    <div>\n                        {tagsGroup.group.map(({ fieldValue }, index) => (\n                            <div className=\"tag-item\" key={fieldValue}>\n                                <Link to={`/tags/${fieldValue.replace(/\\./g, '_')}`}>\n                                    {fieldValue}\n                                </Link>\n                                {index < tagsGroup.group.length - 1 && (\n                                    <span className=\"dot\">·</span>\n                                )}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n//hippostick.png\nexport default SideBar;\n"],"sourceRoot":""}